# Pour construire l'image du docker :
# docker compose up -d --build --remove-orphans --force-recreate <forum>
#-Lance le docker compose dans le document.
#------------------- lance en detach mod, en arrière plan, évite d'immobiliser le terminal mobilisé.
#---------------------- build l'image.
#----------------------------- supprime les dockers qui tournent déjà.

# Si l'image du container est déjà créée, pour lancer le container :
# docker start <nom de l'image>

# Pour arrêter un container actif.
# docker stop <nom de l'image>

# Créé un réseau de containers, où les containers peuvent communiquer.
networks: 
  web: 
    # external: true # /!\ Option à commenter si le réseau exite déjà. Sinon l'absence de cette option va créer le réseau.

services:
  forum:  
    #image: golang:1.22.2 # Seconde manière de faire.
    build: . # va chercher le fichier dockerfile pour construire l'image.
    container_name: forum
    restart: unless-stopped # Si l'image plante, elle redémarre automatiquement sauf arrêt manuel.
    init: true # Pas encore bien compris, mais semble gérer les signaux.
    volumes: 
      - ../forum.db:/app/forum.db
      # ./forum.db C'est la localisation de la BDD au niveau local
      # ---------- /app/forum.db C'est la localisation de la BDD dans le container
    ports:
      - 8086:8086 # le premier c'est le port du pec, le second c'est celui du container
    networks: 
      - web # Connection du container à un réseau Docker nommé web.